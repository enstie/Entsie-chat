datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String          @id @default(cuid())
  email         String          @unique
  username      String          @unique
  password      String
  avatar        String?
  status        String          @default("offline")
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  
  messages      Message[]
  channels      ChannelMember[]
  directMessagesSent     DirectMessage[] @relation("SentMessages")
  directMessagesReceived DirectMessage[] @relation("ReceivedMessages")
}

model Channel {
  id          String          @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  
  messages    Message[]
  members     ChannelMember[]
}

model ChannelMember {
  id        String   @id @default(cuid())
  userId    String
  channelId String
  role      String   @default("member")
  joinedAt  DateTime @default(now())
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  channel   Channel  @relation(fields: [channelId], references: [id], onDelete: Cascade)
  
  @@unique([userId, channelId])
}

model Message {
  id        String   @id @default(cuid())
  content   String
  fileUrl   String?
  userId    String
  channelId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  channel   Channel  @relation(fields: [channelId], references: [id], onDelete: Cascade)
}

model DirectMessage {
  id         String   @id @default(cuid())
  content    String
  fileUrl    String?
  senderId   String
  receiverId String
  read       Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  sender     User     @relation("SentMessages", fields: [senderId], references: [id], onDelete: Cascade)
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id], onDelete: Cascade)
}